<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise Variables
grav = 2;
hsp = 0;
vsp = 0;
movespeed = 4;
jumpspeed_normal = 15;
jumpspeed_powerup = 30;

jumpspeed = jumpspeed_normal;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumpspeed = jumpspeed_normal;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get Player Input
key_right = keyboard_check(vk_right) || keyboard_check(ord("D"));
key_left = keyboard_check(vk_left) || keyboard_check(ord("A"));
key_jump_held = keyboard_check(vk_space) || keyboard_check(vk_shift);
key_jump = keyboard_check_pressed(vk_space) || keyboard_check_pressed(vk_shift);

//React to inputs
move = key_right - key_left;
hsp = move * movespeed;
if(vsp &lt; 10){
    vsp += grav;
}

if(place_meeting(x,y+1,obj_wall) || place_meeting(x,y+1,obj_dead_platform)){
    vsp=key_jump * -jumpspeed;
}

if(vsp&lt;0) &amp;&amp;  (!key_jump_held)
    vsp = max(vsp,-jumpspeed/4);

//Horizontal Collision
if(place_meeting(x+hsp,y,obj_wall)  || place_meeting(x+hsp,y,obj_dead_platform)){
    
    yplus = 0;
    while((place_meeting(x+hsp,y-yplus,obj_wall) || place_meeting(x+hsp,y-yplus,obj_dead_platform)) &amp;&amp; yplus &lt;= abs(8*hsp))
        yplus +=1;
    if(place_meeting(x+hsp,y-yplus,obj_wall) || place_meeting(x+hsp,y-yplus,obj_dead_platform)){
        while(!place_meeting(x+sign(hsp),y,obj_wall)  &amp;&amp; !place_meeting(x+sign(hsp),y,obj_dead_platform))
            x+=sign(hsp);
        hsp = 0;
    }
    else{
        y -= yplus;
    }

}
x += hsp;

//Vertical Collision
if(place_meeting(x,y+vsp,obj_wall)  || place_meeting(x,y+vsp,obj_dead_platform)){
    while(!place_meeting(x,y+sign(vsp),obj_wall)  &amp;&amp; !place_meeting(x,y+sign(vsp),obj_dead_platform)){
        y+=sign(vsp);
    }
    vsp = 0;
}

y += vsp;

//Animate
if (move!=0)
    image_xscale = -move;
    
if (place_meeting(x,y+1,obj_wall) || place_meeting(x,y+1,obj_dead_platform)){
    if(hsp!=0)
        sprite_index = spr_player_move;
    else
        sprite_index = spr_player_idle;
}
else{
    if( vsp &lt; 0)
        sprite_index = spr_player_jump;
    else
        sprite_index = spr_player_fall;
    

    
}

    //Enemy Collision
if(place_meeting(x,y,obj_saw)){
        x = xstart;
        y = ystart;
        
}

if(place_meeting(x,y,obj_spikes)){
        instance_create(x,y,obj_dead_platform);
        x = xstart;
        y = ystart;
        
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>22,14</point>
    <point>42,14</point>
    <point>42,54</point>
    <point>22,54</point>
  </PhysicsShapePoints>
</object>
